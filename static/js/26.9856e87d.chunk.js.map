{"version":3,"sources":["@core/components/input-password-toggle/index.js","views/Signup/index.js","components/SubTitle.jsx"],"names":["InputPasswordToggle","props","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","inputClassName","rest","useState","inputVisibility","setInputVisibility","for","classnames","type","id","addonType","onClick","size","renderIcon","defaultProps","userOptions","value","options","date","delimiter","datePattern","Signup","dispatch","useDispatch","history","useHistory","usertype","favouritegame","firstgame","secondgame","thirdgame","fullname","username","email","address","birthday","telephone","hpb","avatarURL","imageURL","emailVerified","licensed","isOnline","hpbEarn","thumbsUp","thumbsDown","othernames","twitch","facebook","youtube","xbox","psn","nintendo","steam","epic","google","twitter","instagram","telegram","wechat","reddit","user","setUser","password","setPassword","confirmPassword","setConfirmPassword","image","setImage","registering","setRegistering","handleChange","e","target","name","files","prev","isUserDuplicated","Promise","resolve","reject","firebase","database","ref","orderByChild","equalTo","once","then","snapshot","val","handleSubmit","a","preventDefault","trim","includes","alert","auth","createUserWithEmailAndPassword","uid","storage","put","child","getDownloadURL","set","handleLogin","push","message","title","lg","sm","md","onSubmit","theme","selectThemeColors","classNamePrefix","defaultValue","isClearable","onChange","selected","favouriteGames","map","g","i","minLength","maxLength","autoFocus","required","min","max","to","Ripple","color","block","disabled","role","SubTitle","class_str","toUpperCase"],"mappings":"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","file":"static/js/26.9856e87d.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\n\nconst InputPasswordToggle = props => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\n      <InputGroup\n        className={classnames({\n          [className]: className\n        })}\n      >\n        <Input\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName, componentName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName, componentName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { Row, Col, Form, FormGroup, Label, Input, CustomInput, Button } from 'reactstrap'\nimport { Offline, Online } from \"react-detect-offline\"\nimport Select from 'react-select'\nimport Cleave from 'cleave.js/react'\nimport SubTitle from '../../components/SubTitle'\nimport { selectThemeColors } from '@utils'\nimport './Signup.scss'\n\n// ** Favourite games\nimport favouriteGames from '../../favourite-games.json'\n\n// ** Firebase\nimport firebase from 'firebase/app'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { handleLogin } from '@store/actions/auth'\n\nconst userOptions = [\n  { value: '0', label: 'Player' },\n  { value: '1', label: 'Referee' }\n]\n\nconst options = { date: true, delimiter: '-', datePattern: ['Y', 'm', 'd'] }\n\nconst Signup = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const [user, setUser] = useState({\n    usertype: 0,\n    favouritegame: '',\n    firstgame: '',\n    secondgame: '',\n    thirdgame: '',\n    fullname: '',\n    username: '',\n    email: '',\n    address: '',\n    birthday: '',\n    telephone: '',\n    hpb: '',\n    avatarURL: 'https://firebasestorage.googleapis.com/v0/b/esportsref-94707.appspot.com/o/avatars%2Fdefault.png?alt=media&token=8241da30-8257-4d89-b411-9b9fab719024',\n    imageURL: '',\n    emailVerified: false,\n    licensed: false,\n    isOnline: false,\n    hpbEarn: 0,\n    thumbsUp: 0,\n    thumbsDown: 0,\n    othernames: {\n      twitch: '',\n      facebook: '',\n      youtube: '',\n      xbox: '',\n      psn: '',\n      nintendo: '',\n      steam: '',\n      epic: '',\n      google: '',\n      twitter: '',\n      instagram: '',\n      telegram: '',\n      wechat: '',\n      reddit: ''\n    }\n  })\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [image, setImage] = useState(null)\n  const [registering, setRegistering] = useState(false)\n\n  const handleChange = (e) => {\n    if (e.target.name === \"image\") {\n      setImage(e.target.files[0])\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value)\n    } else if (e.target.name === \"confirmPassword\") {\n      setConfirmPassword(e.target.value)\n    } else {\n      const { name, value } = e.target\n      setUser(prev => ({ ...prev, [name]: value }))\n    }\n  }\n\n  const handleUserType = (selected) => {\n    if (selected.value === '0') {\n      // Player avatar\n      setUser(prev => ({ ...prev, usertype: selected.value, avatarURL: 'https://firebasestorage.googleapis.com/v0/b/esportsref-94707.appspot.com/o/avatars%2Fdefault.png?alt=media&token=8241da30-8257-4d89-b411-9b9fab719024' }))\n    } else {\n      // Referee avatar\n      setUser(prev => ({ ...prev, usertype: selected.value, avatarURL: 'https://firebasestorage.googleapis.com/v0/b/esportsref-94707.appspot.com/o/avatars%2Freferee.png?alt=media&token=a110bdb4-19c8-4a9a-8dec-3a6fe7ddc35d' }))\n    }\n  }\n\n  const handleFavouriteGame = (selected) => {\n    setUser(prev => ({ ...prev, favouritegame: selected.value }))\n  }\n\n  const isUserDuplicated = (username) => {\n    return new Promise(function (resolve, reject) {\n      firebase.database().ref('/users')\n        .orderByChild('username')\n        .equalTo(username)\n        .once('value')\n        .then((snapshot) => {\n          if (snapshot.val()) {\n            resolve(true)\n          } else {\n            resolve(false)\n          }\n        })\n    })\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (user.username && user.username.trim().includes(' ')) {\n      alert('User name can\\'t include a space, please input your username again!')\n      return\n    }\n\n    if (password !== confirmPassword) {\n      alert('Passwords don\\'t appear to match, please input your password again!')\n      return\n    }\n\n    setRegistering(true)\n\n    const res = await isUserDuplicated(user.username)\n\n    if (res) {\n      setRegistering(false)\n      alert('Username already used, please use other another username')\n      return\n    }\n\n    try {\n      const { user: { uid } } = await firebase.auth().createUserWithEmailAndPassword(user.email, password)\n\n      // upload image\n      await firebase.storage().ref(`/images/${image.name}`).put(image)\n      user.imageURL = await firebase.storage().ref('/images').child(image.name).getDownloadURL()\n\n      firebase.database().ref('/users').child(uid).set(user)\n      dispatch(handleLogin({ ...user, isOnline: true }))\n      history.push('/home')\n    } catch (err) {\n      alert(err.message)\n    } finally {\n      setRegistering(false)\n    }\n  }\n\n  return (\n    <div className='Signup'>\n      <Row className='justify-content-center'>\n        <SubTitle title={\"Sign Up\"} className=\"m-t-40 w-100\" />\n        <Offline>\n          <div className=\"h3\">No connectivity, please try again when it's available</div>\n        </Offline>\n        <Online>\n          <Col className='d-flex align-items-center auth-bg px-2' lg='5' sm='12'>\n            <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n              <Form className='auth-login-form mt-2' onSubmit={handleSubmit}>\n                <FormGroup>\n                  <Label className='form-label'>\n                    User Type\n                  </Label>\n                  <Select\n                    theme={selectThemeColors}\n                    className='react-select'\n                    classNamePrefix='select'\n                    defaultValue={userOptions[0]}\n                    options={userOptions}\n                    isClearable={false}\n                    name=\"usertype\"\n                    onChange={handleUserType}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label className='form-label'>\n                    Select your favourite game genre\n                  </Label>\n                  <Select\n                    theme={selectThemeColors}\n                    className='react-select'\n                    classNamePrefix='select'\n                    options={favouriteGames.map((g, i) => ({ value: i, label: g }))}\n                    isClearable={false}\n                    name=\"favouritegame\"\n                    onChange={handleFavouriteGame}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label className='form-label' for='login-fullname'>\n                    Full Name\n                  </Label>\n                  <Input type='text' id='login-fullname' placeholder='Jone Doe' minLength={3} maxLength={64} name=\"fullname\" value={user.fullname} onChange={handleChange} autoFocus required />\n                </FormGroup>\n                <FormGroup>\n                  <Label className='form-label' for='login-username'>\n                    User Name\n                  </Label>\n                  <Input type='text' id='login-username' placeholder='johndoe1225' minLength={3} maxLength={32} name=\"username\" value={user.username} onChange={handleChange} required />\n                </FormGroup>\n                <FormGroup>\n                  <Label className='form-label' for='login-email'>\n                    Email\n                  </Label>\n                  <Input type='email' id='login-email' placeholder='john@example.com' minLength={4} maxLength={32} name=\"email\" value={user.email} onChange={handleChange} required />\n                </FormGroup>\n                <FormGroup>\n                  <div className='d-flex justify-content-between'>\n                    <Label className='form-label' for='login-password'>\n                      Password\n                    </Label>\n                  </div>\n                  <InputPasswordToggle className='input-group-merge' id='login-password' name=\"password\" minLength={3} maxLength={32} value={password} onChange={handleChange} required />\n                </FormGroup>\n                <FormGroup>\n                  <div className='d-flex justify-content-between'>\n                    <Label className='form-label' for='confirm-password'>\n                      Confirm Password\n                    </Label>\n                  </div>\n                  <InputPasswordToggle className='input-group-merge' id='confirm-password' name=\"confirmPassword\" minLength={3} maxLength={32} value={confirmPassword} onChange={handleChange} required />\n                </FormGroup>\n                <FormGroup>\n                  <Label className='form-label' for='login-address'>\n                    Address\n                  </Label>\n                  <Input type='text' id='login-address' placeholder='1 Avenue Road, London SE1' minLength={10} maxLength={64} name=\"address\" value={user.address} onChange={handleChange} required />\n                </FormGroup>\n                <FormGroup>\n                  <Label className='form-label' for='login-birthday'>\n                    Birthday\n                  </Label>\n                  <Cleave className='form-control' placeholder='2001-01-01' options={options} id='login-birthday' min=\"1900-01-01\" max=\"2050-12-31\" name=\"birthday\" value={user.birthday} onChange={handleChange} required />\n                </FormGroup>\n                <FormGroup>\n                  <Label className='form-label' for='login-telephone'>\n                    Telephone\n                  </Label>\n                  <Input type='text' id='login-telephone' placeholder='1 234 567 8900' minLength={6} maxLength={15} name=\"telephone\" value={user.telephone} onChange={handleChange} required />\n                </FormGroup>\n                <FormGroup>\n                  <Label className='form-label' for='first-game'>\n                    Tell us your first favourite game:\n                  </Label>\n                  <Input type='text' id='first-game' placeholder='' minLength={3} maxLength={64} name=\"firstgame\" value={user.firstgame} onChange={handleChange} autoFocus required />\n                </FormGroup>\n                <FormGroup>\n                  <Label className='form-label' for='first-game'>\n                    Tell us your second favourite game:\n                  </Label>\n                  <Input type='text' id='first-game' placeholder='' minLength={3} maxLength={64} name=\"secondgame\" value={user.secondgame} onChange={handleChange} autoFocus required />\n                </FormGroup>\n                <FormGroup>\n                  <Label className='form-label' for='first-game'>\n                    Tell us your third favourite game:\n                  </Label>\n                  <Input type='text' id='first-game' placeholder='' minLength={3} maxLength={64} name=\"thirdgame\" value={user.thirdgame} onChange={handleChange} autoFocus required />\n                </FormGroup>\n                <FormGroup>\n                  <div className=\"d-flex justify-content-between\">\n                    <Label className='form-label' for='login-hpb'>\n                      Gnosis Wallet Address\n                    </Label>\n                    <Label>\n                      <Link to='/faq'>\n                        <span>Don't you have your Gnosis wallet?</span>\n                      </Link>\n                    </Label>\n                  </div>\n                  <Input type='text' id='login-hpb' placeholder='0xfF3d0b77038706BaAF93D20bD5191b84BeC76FEB' minLength={42} maxLength={42} name=\"hpb\" value={user.hpb} onChange={handleChange} required />\n                </FormGroup>\n                <FormGroup>\n                  <Label className='form-label' for='login-image'>\n                    Passport or Driver licence required to prove your age\n                  </Label>\n                  <CustomInput type='file' id='login-image' name='image' onChange={handleChange} required />\n                </FormGroup>\n                <Button.Ripple type=\"submit\" color='primary' block className=\"mt-2 flex justify-content-center align-items-center\" disabled={registering} >\n                  {registering &&\n                    <span className=\"spinner-border spinner-border-sm mr-1\" role=\"status\" aria-hidden=\"true\"></span>\n                  }\n                  Sign Up\n                </Button.Ripple>\n\n              </Form>\n              <p className='text-center mt-2'>\n                <span className='mr-25'>Already have an account?</span>\n                <Link to='/signin'>\n                  <span>Sign in instead</span>\n                </Link>\n              </p>\n            </Col>\n          </Col>\n        </Online>\n      </Row>\n    </div>\n  )\n}\n\nexport default Signup","export default function SubTitle({ title, className }) {\n  const class_str = className ? `basr-heading  has-border ${className}` : \"basr-heading  has-border\"\n\n  return (\n    <div className={class_str}>\n      <div className=\"basr-heading-inner\">\n        <div className=\"h-b4-1\">\n          <span className=\"diagonal\"></span>\n        </div>\n        <div className=\"text\">\n          <h2 className=\"h\">\n            <strong>{title ? title.toUpperCase() : \"SUBTITLE\"}</strong>\n          </h2>\n        </div>\n        <div className=\"h-after-border\">\n          <span className=\"diagonal\"></span>\n        </div>\n      </div>\n    </div>\n  )\n}"],"sourceRoot":""}