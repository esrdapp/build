{"version":3,"sources":["../node_modules/ethjs-util/lib/index.js","../../src/index.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized.js","secp256k1.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","keccak.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/ethereum-cryptography/node_modules/secp256k1/elliptic.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/is-hex-prefixed/src/index.js","../node_modules/strip-hex-prefix/src/index.js","hash-utils.ts","../node_modules/keccak/js.js","../node_modules/keccak/lib/api/index.js","../node_modules/keccak/lib/api/keccak.js","../node_modules/keccak/lib/api/shake.js","../node_modules/keccak/lib/keccak.js","../node_modules/keccak/lib/keccak-state-unroll.js","../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/index.js","../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/elliptic.js","random.ts"],"names":["isHexPrefixed","require","stripHexPrefix","padToEven","value","a","Error","length","intToHex","i","toString","module","exports","arrayContainsArray","superset","subset","some","Array","isArray","Boolean","indexOf","intToBuffer","hex","Buffer","slice","getBinarySize","str","byteLength","fromAscii","stringValue","n","charCodeAt","fromUtf8","replace","toAscii","l","substring","code","parseInt","substr","String","fromCharCode","toUtf8","getKeys","params","key","allowEmpty","result","push","isHexString","match","unsupportedIterableToArray","o","allowArrayLike","it","Symbol","iterator","F","s","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","setPrototypeOf","subClass","superClass","prototype","Object","create","constructor","writable","configurable","getPrototypeOf","isNativeReflectConstruct","possibleConstructorReturn","Derived","hasNativeReflectConstruct","Super","NewTarget","this","Reflect","construct","arguments","apply","_getPrototypeOf","__proto__","self","ReferenceError","_setPrototypeOf","p","sham","Proxy","Date","call","createKeccakHash","_typeof","assertThisInitialized","obj","arrayLikeToArray","minLen","name","from","test","arr","len","arr2","createKeccak","createShake","KeccakState","Keccak","Shake","algorithm","options","toLowerCase","Transform","rate","capacity","delimitedSuffix","hashBitLength","_rate","_capacity","_delimitedSuffix","_hashBitLength","_options","_state","initialize","_finalized","chunk","encoding","callback","error","update","digest","data","isBuffer","absorb","absorbLastFewBits","squeeze","undefined","_resetState","clone","copy","size","dataByteLength","keccakState","state","blockSize","count","squeezing","p1600","bits","output","alloc","dest","P1600_ROUND_CONSTANTS","round","lo0","hi0","lo1","hi1","lo2","hi2","lo3","hi3","lo4","hi4","lo","hi","t1slo0","t1shi0","t1slo5","t1shi5","t1slo10","t1shi10","t1slo15","t1shi15","t1slo20","t1shi20","t1slo1","t1shi1","t1slo6","t1shi6","t1slo11","t1shi11","t1slo16","t1shi16","t1slo21","t1shi21","t1slo2","t1shi2","t1slo7","t1shi7","t1slo12","t1shi12","t1slo17","t1shi17","t1slo22","t1shi22","t1slo3","t1shi3","t1slo8","t1shi8","t1slo13","t1shi13","t1slo18","t1shi18","t1slo23","t1shi23","t1slo4","t1shi4","t1slo9","t1shi9","t1slo14","t1shi14","t1slo19","t1shi19","t1slo24","t1shi24","t2slo0","t2shi0","t2slo16","t2shi16","t2slo7","t2shi7","t2slo23","t2shi23","t2slo14","t2shi14","t2slo10","t2shi10","t2slo1","t2shi1","t2slo17","t2shi17","t2slo8","t2shi8","t2slo24","t2shi24","t2slo20","t2shi20","t2slo11","t2shi11","t2slo2","t2shi2","t2slo18","t2shi18","t2slo9","t2shi9","t2slo5","t2shi5","t2slo21","t2shi21","t2slo12","t2shi12","t2slo3","t2shi3","t2slo19","t2shi19","t2slo15","t2shi15","t2slo6","t2shi6","t2slo22","t2shi22","t2slo13","t2shi13","t2slo4","t2shi4","errors","assert","cond","msg","isUint8Array","Uint8Array","numbers","join","includes","isCompressed","toTypeString","getAssertedOutput","secp256k1","contextRandomize","seed","privateKeyVerify","seckey","privateKeyNegate","privateKeyTweakAdd","tweak","privateKeyTweakMul","publicKeyVerify","pubkey","publicKeyCreate","compressed","publicKeyConvert","publicKeyNegate","publicKeyCombine","pubkeys","publicKeyTweakAdd","publicKeyTweakMul","signatureNormalize","sig","signatureExport","outputlen","signatureImport","ecdsaSign","msg32","noncefn","signature","recid","ecdsaVerify","ecdsaRecover","ecdh","hashfn","xbuf","ybuf","ec","EC","ecparams","curve","BN","loadPublicKey","first","x","cmp","y","toRed","red","redSqr","redIMul","redIAdd","b","redSqrt","isOdd","redNeg","keyPair","pub","loadCompressedPublicKey","subarray","x3","redISub","isZero","loadUncompressedPublicKey","savePublicKey","point","encode","bn","negate","sub","umod","toArrayLike","set","iadd","isub","tweaked","imul","keyFromPrivate","getPublic","pair","pairs","add","isInfinity","g","mul","r","nh","sigR","sigS","lenR","posR","lenS","posS","message","_noncefn","counter","nonce","d","sign","canonical","k","pers","recoveryParam","sigObj","sigr","sigs","verify","recoverPubKey","scalar","sha256","hash","getX","toArray","getY","resolve"],"mappings":"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","file":"static/js/3.aa9886cf.chunk.js","sourcesContent":["'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLength = exports.decode = exports.encode = void 0;\nvar BN = require(\"bn.js\");\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        var output = [];\n        for (var i = 0; i < input.length; i++) {\n            output.push(encode(input[i]));\n        }\n        var buf = Buffer.concat(output);\n        return Buffer.concat([encodeLength(buf.length, 192), buf]);\n    }\n    else {\n        var inputBuf = toBuffer(input);\n        return inputBuf.length === 1 && inputBuf[0] < 128\n            ? inputBuf\n            : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n    }\n}\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v, base) {\n    if (v.slice(0, 2) === '00') {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseInt(v, base);\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Buffer.from([len + offset]);\n    }\n    else {\n        var hexLength = intToHex(len);\n        var lLength = hexLength.length / 2;\n        var firstByte = intToHex(offset + 55 + lLength);\n        return Buffer.from(firstByte + hexLength, 'hex');\n    }\n}\nfunction decode(input, stream) {\n    if (stream === void 0) { stream = false; }\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var decoded = _decode(inputBuffer);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid remainder');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nfunction getLength(input) {\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var firstByte = inputBuffer[0];\n    if (firstByte <= 0x7f) {\n        return inputBuffer.length;\n    }\n    else if (firstByte <= 0xb7) {\n        return firstByte - 0x7f;\n    }\n    else if (firstByte <= 0xbf) {\n        return firstByte - 0xb6;\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        return firstByte - 0xbf;\n    }\n    else {\n        // a list  over 55 bytes long\n        var llength = firstByte - 0xf6;\n        var length = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n        return llength + length;\n    }\n}\nexports.getLength = getLength;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    var length, llength, data, innerRemainder, d;\n    var decoded = [];\n    var firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = input.slice(1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid rlp encoding: byte must be less 0x80');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = input.slice(llength, length + llength);\n        if (data.length < length) {\n            throw new Error('invalid RLP: not enough bytes for string');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = input.slice(1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list  over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        var totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid rlp: total length is larger than the data');\n        }\n        innerRemainder = input.slice(llength, totalLength);\n        if (innerRemainder.length === 0) {\n            throw new Error('invalid rlp, List has a invalid length');\n        }\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    var hex = integer.toString(16);\n    return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer) {\n    var hex = intToHex(integer);\n    return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\nfunction toBuffer(v) {\n    if (!Buffer.isBuffer(v)) {\n        if (typeof v === 'string') {\n            if (isHexPrefixed(v)) {\n                return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n            }\n            else {\n                return Buffer.from(v);\n            }\n        }\n        else if (typeof v === 'number' || typeof v === 'bigint') {\n            if (!v) {\n                return Buffer.from([]);\n            }\n            else {\n                return intToBuffer(v);\n            }\n        }\n        else if (v === null || v === undefined) {\n            return Buffer.from([]);\n        }\n        else if (v instanceof Uint8Array) {\n            return Buffer.from(v);\n        }\n        else if (BN.isBN(v)) {\n            // converts a BN to a Buffer\n            return Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n}\n//# sourceMappingURL=index.js.map","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}\n\nmodule.exports = _createSuper;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1_1 = require(\"secp256k1\");\nvar random_1 = require(\"./random\");\nvar SECP256K1_PRIVATE_KEY_SIZE = 32;\nfunction createPrivateKey() {\n    return __awaiter(this, void 0, void 0, function () {\n        var pk;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!true) return [3 /*break*/, 2];\n                    return [4 /*yield*/, random_1.getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE)];\n                case 1:\n                    pk = _a.sent();\n                    if (secp256k1_1.privateKeyVerify(pk)) {\n                        return [2 /*return*/, pk];\n                    }\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.createPrivateKey = createPrivateKey;\nfunction createPrivateKeySync() {\n    while (true) {\n        var pk = random_1.getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n        if (secp256k1_1.privateKeyVerify(pk)) {\n            return pk;\n        }\n    }\n}\nexports.createPrivateKeySync = createPrivateKeySync;\n__export(require(\"secp256k1\"));\n//# sourceMappingURL=secp256k1.js.map","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hash_utils_1 = require(\"./hash-utils\");\nvar createKeccakHash = require(\"keccak\");\nexports.keccak224 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak224\");\n});\nexports.keccak256 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak256\");\n});\nexports.keccak384 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak384\");\n});\nexports.keccak512 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak512\");\n});\n//# sourceMappingURL=keccak.js.map","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","module.exports = require('./lib')(require('./lib/elliptic'))\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createHashFunction(hashConstructor) {\n    return function (msg) {\n        var hash = hashConstructor();\n        hash.update(msg);\n        return Buffer.from(hash.digest());\n    };\n}\nexports.createHashFunction = createHashFunction;\n//# sourceMappingURL=hash-utils.js.map","module.exports = require('./lib/api')(require('./lib/keccak'))\n","const createKeccak = require('./keccak')\nconst createShake = require('./shake')\n\nmodule.exports = function (KeccakState) {\n  const Keccak = createKeccak(KeccakState)\n  const Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n","const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Keccak extends Transform {\n  constructor (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  digest (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  _clone () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Shake extends Transform {\n  constructor (rate, capacity, delimitedSuffix, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush () {}\n\n  _read (size) {\n    this.push(this.squeeze(size))\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  squeeze (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  _clone () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (let i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n","const P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (let round = 0; round < 24; ++round) {\n    // theta\n    const lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    const hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    const lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    const hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    const lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    const hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    const lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    const hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    const lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    const hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    let lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    let hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    const t1slo0 = s[0] ^ lo\n    const t1shi0 = s[1] ^ hi\n    const t1slo5 = s[10] ^ lo\n    const t1shi5 = s[11] ^ hi\n    const t1slo10 = s[20] ^ lo\n    const t1shi10 = s[21] ^ hi\n    const t1slo15 = s[30] ^ lo\n    const t1shi15 = s[31] ^ hi\n    const t1slo20 = s[40] ^ lo\n    const t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    const t1slo1 = s[2] ^ lo\n    const t1shi1 = s[3] ^ hi\n    const t1slo6 = s[12] ^ lo\n    const t1shi6 = s[13] ^ hi\n    const t1slo11 = s[22] ^ lo\n    const t1shi11 = s[23] ^ hi\n    const t1slo16 = s[32] ^ lo\n    const t1shi16 = s[33] ^ hi\n    const t1slo21 = s[42] ^ lo\n    const t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    const t1slo2 = s[4] ^ lo\n    const t1shi2 = s[5] ^ hi\n    const t1slo7 = s[14] ^ lo\n    const t1shi7 = s[15] ^ hi\n    const t1slo12 = s[24] ^ lo\n    const t1shi12 = s[25] ^ hi\n    const t1slo17 = s[34] ^ lo\n    const t1shi17 = s[35] ^ hi\n    const t1slo22 = s[44] ^ lo\n    const t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    const t1slo3 = s[6] ^ lo\n    const t1shi3 = s[7] ^ hi\n    const t1slo8 = s[16] ^ lo\n    const t1shi8 = s[17] ^ hi\n    const t1slo13 = s[26] ^ lo\n    const t1shi13 = s[27] ^ hi\n    const t1slo18 = s[36] ^ lo\n    const t1shi18 = s[37] ^ hi\n    const t1slo23 = s[46] ^ lo\n    const t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    const t1slo4 = s[8] ^ lo\n    const t1shi4 = s[9] ^ hi\n    const t1slo9 = s[18] ^ lo\n    const t1shi9 = s[19] ^ hi\n    const t1slo14 = s[28] ^ lo\n    const t1shi14 = s[29] ^ hi\n    const t1slo19 = s[38] ^ lo\n    const t1shi19 = s[39] ^ hi\n    const t1slo24 = s[48] ^ lo\n    const t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    const t2slo0 = t1slo0\n    const t2shi0 = t1shi0\n    const t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    const t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    const t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    const t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    const t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    const t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    const t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    const t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    const t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    const t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    const t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    const t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    const t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    const t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    const t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    const t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    const t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    const t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    const t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    const t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    const t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    const t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    const t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    const t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    const t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    const t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    const t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    const t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    const t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    const t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    const t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    const t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    const t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    const t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    const t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    const t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    const t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    const t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    const t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    const t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    const t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    const t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    const t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    const t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    const t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    const t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    const t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    const t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar randombytes = require(\"randombytes\");\nfunction getRandomBytes(bytes) {\n    return new Promise(function (resolve, reject) {\n        randombytes(bytes, function (err, resp) {\n            if (err) {\n                reject(err);\n                return;\n            }\n            resolve(resp);\n        });\n    });\n}\nexports.getRandomBytes = getRandomBytes;\nfunction getRandomBytesSync(bytes) {\n    return randombytes(bytes);\n}\nexports.getRandomBytesSync = getRandomBytesSync;\n//# sourceMappingURL=random.js.map"],"sourceRoot":""}